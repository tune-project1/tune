---
// @ts-nocheck
import BaseLayout from "@/layouts/base.astro";
import Constrain from "@tune/components/ui/constrain.vue"
import {apiList, manualList} from "@tune/content/list.js";
import headings from "@/lib/get-headings.js";
import slugify from "@/lib/slugify.js";
import Toc from "@tune/components/ui/toc.vue";
import Prevnext from "@tune/components/ui/prevnext.vue";

const posts = await Astro.glob('../../../../packages/content/manual/*.mdx');

const params = Astro.params;

let page = null;
let prevPage = null;
let nextPage = null;


for(let i = 0; i < manualList.length; i++) {
  let p = manualList[i];
  let slug = slugify(p.name);

  if(slug === params.slug) {
    if(manualList[i - 1]) {
      prevPage = manualList[i - 1];
    }
    if(manualList[i + 1]) {
      nextPage = manualList[i + 1];
    } 
    page = p;
    break;
  }
}

if(prevPage && prevPage.path) {
  prevPage = {
    title : prevPage.name,
    path : `${prevPage.path}`
  }
} else {
  prevPage = null;
}
if(nextPage && nextPage.path) {
  nextPage = {
    title : nextPage.name,
    path : `${nextPage.path}`
  }
} else {
  nextPage = null;
}

export const getStaticPaths = function() {
  let list = [];
  manualList.map((page) => {
    if(page.path) {
      list.push({
        params : {
          slug : slugify(page.name)
        }
      })
    }
  });
  return list;
}

if(!page) {
  return;
}

let content = null;

for(let  i = 0; i < posts.length; i++) {
  let post = posts[i];
  let file = post.file;



  if(file.includes(page.path)) {
    content = post;
    break;
  }
}

const Content = content.Content;

---


<BaseLayout>
  <Constrain size="lg">
    <div slot="sidebar">
      <Toc client:load pathname={Astro.url.pathname} headings={headings}></Toc>
    </div>
    <div slot="default">
      <div class="c-page">
        <Content />
        <Prevnext prev={prevPage} next={nextPage} />
      </div>
    </div>
  </Constrain>
</BaseLayout>