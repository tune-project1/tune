services:
  # Backend Node.js service
  - type: web
    name: tune-backend
    plan: free
    runtime: node
    rootDir: backend
    buildCommand: npm run build
    startCommand: npm start
    envVars:
      - key: NODE_ENV
        value: production
      - key: DATABASE_URL
        value: mysql://root:${MYSQL_ROOT_PASSWORD}@tune-mysql:3306/tune
      - key: CLICKHOUSE_URL
        value: "" # Optional: Set if using ClickHouse
      - key: API_URL
        value: https://api.tune
      - key: APP_URL
        value: https://app.tune
      - key: VAPID_EMAIL
        value: ""
      - key: VAPID_PUBLIC_KEY
        value: ""
      - key: VAPID_PRIVATE_KEY
        value: ""
      - key: RESEND
        value: ""
      - key: OPERATIONAL
        value: ""
      - key: PORT
        value: 8080
      - key: SECRET
        generateValue: true
      - key: EVENT_STORE
        value: mysql
      - key: STRIPE_TEST_KEY
        value: "p"
      - key: STRIPE_TEST_SECRET
        value: ""
      - key: STRIPE_LIVE_KEY
        value: ""
      - key: STRIPE_LIVE_SECRET
        value: ""

  # MySQL Service
  - type: pserv
    name: mysql
    plan: starter
    runtime: docker
    dockerfilePath: ./docker/mysql/Dockerfile
    autoDeploy: false
    disk:
      name: mysql
      mountPath: /var/lib/mysql
      sizeGB: 10
    envVars:
      - fromGroup: mysql

  # Frontend static SPA
  - type: web
    name: tune-frontend
    runtime: static
    rootDir: app
    buildCommand: npm ci && npm run build
    staticPublishPath: ./dist
    routes:
      - type: rewrite
        source: /*
        destination: /index.html

envVarGroups:
  - name: tune-settings
    envVars:
      - key: JWT_SECRET
        generateValue: true
      - key: COOKIE_SECRET
        generateValue: true
  - name: mysql
    envVars:
      - key: MYSQL_DATABASE
        value: mysql
      - key: MYSQL_USER
        value: mysql
      - key: MYSQL_PASSWORD
        generateValue: true
      - key: MYSQL_ROOT_PASSWORD
        generateValue: true
